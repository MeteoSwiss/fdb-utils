[tool.poetry]
name = "fdb-utils"
# Keep only Major and Minor version in this configuration,
# the patch version is calculated when releasing the library
version = "1.1"
description = "Python library for users and admins of FDB."
authors = ["Victoria Cherkas <victoria.cherkas@meteoswiss.ch>"]
readme = "README.rst"
include = ["HISTORY.rst"]

[[tool.poetry.source]]
name = "pypi-mch"
url = "https://service.meteoswiss.ch/nexus/repository/python-all/simple"
priority = "primary"

[[tool.poetry.source]]
name = "pypi-mch-publish"
# only hub entrypoint can be used for publishing libraries (accessible from CI/CD server)
url = "https://hub.meteoswiss.ch/nexus/repository/python-mch/"
priority = "explicit"

[tool.poetry.scripts]
fdb-utils = "fdb_utils.main:app"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
typer = "^0.12.3"
eccodes = "*"
matplotlib = "^3.10"
pyfdb = { url = "https://github.com/ecmwf/pyfdb/archive/refs/tags/0.0.3.zip" }
packaging = "^24.1"
cffi = "^1.16.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.6.1"
pytest-mock = "*"
pydata-sphinx-theme = "^0.14.1"
pylint = "^3.0.2"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
sphinx = "^7.2.6"
sphinx-autoapi = "^3.0.0"
yapf = "^0.40.2"
python-dotenv = "^1.0.1"

[tool.pytest.ini_options]
testpaths = [
    "test"
]

[tool.yapf]
based_on_style = "pep8"
column_limit = "120"

[tool.pylint.master]
disable = [
    'C0114', # missing-module-docstring
    'C0115', # missing-class-docstring
    'C0116', # missing-function-docstring
    'W0511', # fix me or to-do comments are already covered by SonarQube
]

[tool.pylint.format]
# Maximum number of lines in a module.
max-line-length = 120

[tool.pylint.design]
# Minimum number of public methods for a class (see R0903).
min-public-methods = 0

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true

[tool.coverage.run]
omit = ["test/**",  "doc/**"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
